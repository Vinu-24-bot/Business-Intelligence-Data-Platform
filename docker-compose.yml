version: "3.9"

services:
  warehouse-db:
    image: postgres:14
    container_name: warehouse-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - warehouse_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  airflow:
    image: apache/airflow:3.0.6
    container_name: airflow
    depends_on:
      warehouse-db:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW_UID: ${AIRFLOW_UID}
      # pass warehouse env to the container
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      WAREHOUSE_DB_HOST: ${WAREHOUSE_DB_HOST}
      WAREHOUSE_DB_PORT: ${WAREHOUSE_DB_PORT}
      WAREHOUSE_DB_NAME: ${WAREHOUSE_DB_NAME}
      WAREHOUSE_DB_USER: ${WAREHOUSE_DB_USER}
      WAREHOUSE_DB_PASSWORD: ${WAREHOUSE_DB_PASSWORD}
      WAREHOUSE_DB_URL: ${WAREHOUSE_DB_URL}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./requirements.txt:/opt/airflow/requirements.txt
      - ./data:/opt/airflow/data
    command: >
      bash -c "
      pip install -r /opt/airflow/requirements.txt &&
      airflow db init &&
      airflow users create --username airflow --password airflow --firstname Air --lastname Flow --role Admin --email admin@example.com &&
      airflow webserver -p 8080 & airflow scheduler
      "
    ports:
      - "8080:8080"

volumes:
  warehouse_data:
